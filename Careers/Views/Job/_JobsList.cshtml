@using Careers.DataAccess.ViewModels
@model StaticPagedList<JobPostsModel>
@using X.PagedList.Mvc;
@using X.PagedList;
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@{
    var page = ViewBag.Page;
    var pageSize = ViewBag.PageSize;
    var search = ViewBag.Search;
    var industry = ViewBag.Industry;
    var sortFields = ViewBag.SortFields;
}
<link rel="stylesheet" href="~/css/AllJobs.css" />


    
<div class="table">
    <table class="table table-striped table-sm pt-5 col-12">
        <thead class="thead-light">
            <tr>
                <th> <a asp-action="GetAllJobs" asp-controller = "Job" style="text-decoration:none; color:black" asp-route-sortFields="@ViewData["titleSort"]">Title</a></th>
                <th><a asp-action="GetAllJobs" asp-controller = "Job" style="text-decoration:none; color:black" asp-route-sortFields="@ViewData["descriptionSort"]">Description</a></th>
                <th><a asp-action="GetAllJobs" asp-controller = "Job" style="text-decoration:none; color:black" asp-route-sortFields="@ViewData["postedDateSort"]">Post Date</a></th>
                <th><a asp-action="GetAllJobs" asp-controller = "Job" style="text-decoration:none; color:black" asp-route-sortFields="@ViewData["deadlineSort"]">Deadline</a></th>
                <th></th>
            </tr>
        </thead>
        <tbody class="list">
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Title) </td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td>@Html.DisplayFor(modelItem => item.PostedDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.Deadline)</td>
                    <td>
                        <a>@Html.ActionLink("More", "ViewJob", "Job", new {jobId = item.Id}, new {@class = "More"})</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.PageCount > 1)
{
    @Html.PagedListPager(Model, page => Url.Action("GetAllJobs", new
        {
        page = page ,
        pageSize= pageSize,
        countrySearch = search,
        industryType = industry,
        sortFields = sortFields,
        }),
        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions() { MaximumPageNumbersToDisplay = 5 },
                                                              new AjaxOptions() { HttpMethod = "GET",
                                                              UpdateTargetId = "joblist",
                                                              OnBegin = "ShowLoadingForJobs()",
                                                              OnComplete = "ShowLoadingForJobs()" }))
}

@section scripts{
    <script src="~/js/Job.js" asp-append-version="true"></script>
}



